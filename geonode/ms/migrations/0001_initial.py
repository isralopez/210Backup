# -*- coding: utf-8 -*-
# Generated by Django 1.11.22 on 2019-08-07 23:05
from __future__ import unicode_literals

import ckeditor.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import fontawesome.fields
import geonode.ms.models
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('maps', '0027_auto_20190516_0909'),
        ('groups', '0027_auto_20180105_1631_squashed_0028_auto_20180606_1543'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name=b'Nombre')),
                ('slug', models.SlugField(blank=True)),
                ('description', models.TextField(blank=True, null=True, verbose_name=b'Descripcion')),
                ('image', models.ImageField(blank=True, help_text=b'Imagen', null=True, upload_to=geonode.ms.models.get_upload_path, verbose_name=b'Imagen')),
                ('order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
                ('creation_date', models.DateField(auto_now_add=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Microsite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name=b'Nombre')),
                ('subtitle', models.CharField(blank=True, max_length=200, verbose_name=b'Sub-Titulo')),
                ('description', ckeditor.fields.RichTextField(verbose_name=b'Descripcion')),
                ('url_name', models.CharField(help_text=b'El slug no puede tener espacios, caracteres especiales, ni arrobas', max_length=20, null=True, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), "Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens.", 'invalid')], verbose_name=b'Complementa la URL del sitio (http://idegeo.centrogeo.org.mx/ms/)')),
                ('color', models.IntegerField(blank=True, default=0, null=True, verbose_name=b'Color')),
                ('thematic', models.IntegerField(blank=True, default=0, null=True, verbose_name=b'Thematizador')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to=geonode.ms.models.get_upload_path, verbose_name=b'Imagen de portada')),
                ('image_1', models.ImageField(blank=True, default=None, help_text=b'Este logo va en la parte superior izquierda del micro sitio (max 130x80 px)', null=True, upload_to=geonode.ms.models.get_upload_path, verbose_name=b'Logo 1')),
                ('image_2', models.ImageField(blank=True, help_text=b'Este logo va en la parte superior derecha del micro sitio (max 130x80 px)', null=True, upload_to=geonode.ms.models.get_upload_path, verbose_name=b'Logo 2')),
                ('image_3', models.ImageField(blank=True, help_text=b'Este logo va en la parte inferior izquierda del micro sitio (max 400x100 px)', null=True, upload_to=geonode.ms.models.get_upload_path, verbose_name=b'Logo 3')),
                ('image_4', models.ImageField(blank=True, help_text=b'Este logo es para vizualizarlo en el tipo de vizualizador red', null=True, upload_to=geonode.ms.models.get_upload_path, verbose_name=b'Logo Red')),
                ('public', models.BooleanField(verbose_name=b'Publicar')),
                ('header', models.TextField(blank=True, help_text=b'Aqu\xc3\xad puedes personalizar el encabezado de la p\xc3\xa1gina', null=True, verbose_name=b'Encabezado')),
                ('viewer', models.TextField(blank=True, help_text=b'Aqu\xc3\xad puedes personalizar el visualizador', null=True, verbose_name=b'Visualizador')),
                ('footer', models.TextField(blank=True, help_text=b'Aqu\xc3\xad puedes personalizar el pie de p\xc3\xa1gina', null=True, verbose_name=b'Pie de p\xc3\xa1gina')),
                ('gray_colors', models.BooleanField(default=False, verbose_name=b'Marco en gris')),
                ('size', models.CharField(blank=True, choices=[(b's', b'Small (150x150)'), (b'm', b'Medium (250x250)'), (b'l', b'Large (250x150)'), (b'x', b'XLarge (497x279)'), (b'h', b'Horizontal (851x315)'), (b'v', b'Vertical (1080x608)')], default=b'm', max_length=250, null=True, verbose_name=b'Tipo')),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='groups.GroupProfile', verbose_name=b'Grupo')),
            ],
        ),
        migrations.CreateModel(
            name='Narrative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name=b'Nombre')),
                ('slug', models.SlugField(blank=True)),
                ('author', models.CharField(max_length=100, verbose_name=b'Autor')),
                ('description', models.CharField(max_length=140, verbose_name=b'Descripcion')),
                ('url', models.URLField(blank=True, help_text=b'Solo para ligar a sitios externos', null=True, verbose_name=b'URL externa')),
                ('narrative', ckeditor.fields.RichTextField(blank=True, help_text=b'Aqu\xc3\xad puedes crear tu narrativa que se asociar\xc3\xa1 a un micrositio o categoria', null=True, verbose_name=b'Contenido')),
                ('image', models.ImageField(blank=True, help_text=b'Portada de la narrativa', null=True, upload_to=geonode.ms.models.get_upload_path, verbose_name=b'Portada')),
                ('public', models.BooleanField(verbose_name=b'Publicar')),
                ('draft', models.BooleanField(verbose_name=b'Draft')),
                ('order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('category', models.ForeignKey(blank=True, help_text=b'Elige una categoria para que se asocie a tu narrativa.', null=True, on_delete=django.db.models.deletion.CASCADE, to='ms.Category', verbose_name=b'Asociar a una categoria')),
                ('maps', models.ManyToManyField(blank=True, null=True, related_name='ms_narratives_maps', to='maps.Map', verbose_name=b'Mapas relacionados')),
                ('microsite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ms.Microsite', verbose_name=b'Micrositio')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name=b'Nombre')),
                ('url', models.URLField(blank=True, help_text=b'Solo para ligar a sitios externos', null=True, verbose_name=b'URL externa')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name=b'Contenido')),
                ('icon', fontawesome.fields.IconField(blank=True, max_length=60)),
                ('stack_order', models.IntegerField(blank=True, null=True)),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('microsite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ms.Microsite', verbose_name=b'Micrositio')),
                ('parent_section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='ms.Section', verbose_name=b'Section')),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='microsite',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ms.Microsite', verbose_name=b'Micrositio'),
        ),
        migrations.AddField(
            model_name='category',
            name='parent_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='ms.Category', verbose_name=b'Category'),
        ),
    ]
